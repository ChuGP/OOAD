package uml_generator;

import java.awt.BorderLayout;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.DefaultCellEditor;
import javax.swing.JButton;
import java.awt.event.ActionListener;
import java.util.Map;
import java.util.TreeMap;
import java.awt.event.ActionEvent;
import java.awt.Font;
import java.awt.Frame;
import java.awt.Color;
import java.awt.Dimension;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.JLabel;
import java.awt.GridBagLayout;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import java.awt.GridLayout;
import java.awt.FlowLayout;
import java.awt.SystemColor;
import java.awt.Toolkit;
import java.awt.Window.Type;
import javax.swing.JTextArea;
import javax.swing.JTable;
import javax.swing.JTextPane;
import javax.swing.JComboBox;
import javax.swing.ListSelectionModel;
import javax.swing.JTabbedPane;
import java.awt.ScrollPane;
import javax.swing.JToolBar;
import java.awt.Component;
import java.awt.Rectangle;

public class uml_GUI extends JFrame {

	private JPanel contentPane;
	private JTextField textName;
	private JTable Variable_table;
	private Map<String,class_Detail> Variable_list = new TreeMap<>();
	private class_Detail gp = new class_Detail();
	private JTable function_table;
	private JTable Relationship_table;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					uml_GUI frame = new uml_GUI();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public uml_GUI() {		
//		setExtendedState(JFrame.MAXIMIZED_BOTH);
		setType(Type.POPUP);
		setTitle("      \t\tUML_GENERATOR");
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(0, 0, 1920, 1080);
		
		contentPane = new JPanel();
		contentPane.setPreferredSize(new Dimension(1920, 1080));

		contentPane.setAlignmentY(Component.TOP_ALIGNMENT);
		contentPane.setAlignmentX(Component.LEFT_ALIGNMENT);
		contentPane.setToolTipText("");
		contentPane.setBorder(new EmptyBorder(10, 10, 10, 10));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		Dimension screensize = Toolkit.getDefaultToolkit().getScreenSize();
		System.out.println(screensize.getHeight() + screensize.getWidth() );
		contentPane.setPreferredSize(screensize);

		// Label
		JLabel className = new JLabel("Class Name");
		className.setBounds(505, 77, 141, 54);
		className.setFont(new Font("Arial", Font.PLAIN, 26));
		contentPane.add(className);
		// Label
		
		// 輸入Class Name的textarea
		textName = new JTextField();
		textName.setBounds(651, 77, 266, 54);
		textName.setFont(new Font("新細明體", Font.PLAIN, 40));
		contentPane.add(textName);
		textName.setColumns(20);
		
		// 顯示框(textArea)
		JTextArea textShowDetail = new JTextArea();
		textShowDetail.setBounds(1375, 232, 490, 788);
		textShowDetail.setBackground(new Color(211, 211, 211));
		textShowDetail.setForeground(Color.BLACK);
		textShowDetail.setFont(new Font("Arial", Font.PLAIN, 18));
		contentPane.add(textShowDetail);
		// Read Name Button
		JButton btnReadName = new JButton("Read Name");
		btnReadName.setBounds(922, 84, 193, 39);
		btnReadName.setBackground(new Color(240, 240, 240));
		btnReadName.setFont(new Font("Arial", Font.PLAIN, 26));
//		
		btnReadName.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				System.out.println(textName.getText());
				gp._class_name_setter(textName.getText());
				textName.setText(null);
				String temp = "Class Name: " + gp._class_name__getter() + "\n";
				textShowDetail.append(temp);
				
			}
		});
		contentPane.add(btnReadName);
		
		
		
		
		JLabel lblNewLabel = new JLabel("Member Variable");
		lblNewLabel.setBounds(441, 180, 266, 41);
		lblNewLabel.setFont(new Font("Arial", Font.PLAIN, 35));
		contentPane.add(lblNewLabel);
		
		
		
		JLabel lblClassDetailInfo = new JLabel("Class Detail Info");
		lblClassDetailInfo.setBounds(1461, 168, 284, 51);
		lblClassDetailInfo.setFont(new Font("Arial", Font.PLAIN, 40));
		contentPane.add(lblClassDetailInfo);
		
		JScrollPane scrollPane_variable = new JScrollPane();
		scrollPane_variable.setBounds(295, 226, 610, 207);
		contentPane.add(scrollPane_variable);
		
		Variable_table = new JTable();
		Variable_table.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
		Variable_table.setToolTipText("");
		Variable_table.setFont(new Font("Arial", Font.PLAIN, 20));
		Variable_table.setRowHeight(25);
		
		Variable_table.setModel(new DefaultTableModel(
			new Object[][] {
				{null, null, null},
				{null, null, null},
				{null, null, null},
				{null, null, null},
				{null, null, null},
				{null, null, null},
				{null, null, null},
				{null, null, null},
				{null, null, null},
				{null, null, null},
				{null, null, null},
				{null, null, null},
				{null, null, null},
				{null, null, null},
				{null, null, null},
				{null, null, null},
			},
			new String[] {
				"Reference", "Variable Type", "Variable Name"
			}
		) {
			Class[] columnTypes = new Class[] {
				String.class, String.class, String.class
			};
			public Class getColumnClass(int columnIndex) {
				return columnTypes[columnIndex];
			}
		});
		Variable_table.getColumnModel().getColumn(1).setPreferredWidth(100);
		Variable_table.getColumnModel().getColumn(2).setPreferredWidth(300);
		
		// 把ComboBox加入tabel1
		
		TableColumn referenceColumn = Variable_table.getColumn("Reference");
		scrollPane_variable.setViewportView(Variable_table);
		
		
		
		
		
		JButton btnReadVariable = new JButton("Read Variable");
		btnReadVariable.setBounds(295, 443, 610, 59);
		btnReadVariable.setFont(new Font("Arial", Font.PLAIN, 26));
		contentPane.add(btnReadVariable);
		btnReadVariable.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				getTable_SetToMap(Variable_table);
				for ( Map.Entry<String,class_Detail> entry : Variable_list.entrySet())
				{
					textShowDetail.append("--------------------------------------------------------\nMember Variable:\n");
					String temp = entry.getValue().reference_getter() +" " +  entry.getValue().variable_type__getter() + " " + entry.getValue()._variable_name__getter() + "\n";
					textShowDetail.append(temp);
				}
				
			}
		});
		JLabel lblMemberFunction = new JLabel("Member Function");
		lblMemberFunction.setBounds(441, 515, 266, 41);
		lblMemberFunction.setFont(new Font("Arial", Font.PLAIN, 35));
		contentPane.add(lblMemberFunction);
		
		JScrollPane scrollPane_function = new JScrollPane();
		scrollPane_function.setBounds(295, 561, 610, 202);
		contentPane.add(scrollPane_function);
		
		function_table = new JTable();
		function_table.setFont(new Font("Arial", Font.PLAIN, 20));
		function_table.setModel(new DefaultTableModel(
			new Object[][] {
				{null, null, null},
				{null, null, null},
				{null, null, null},
				{null, null, null},
				{null, null, null},
				{null, null, null},
				{null, null, null},
				{null, null, null},
				{null, null, null},
				{null, null, null},
				{null, null, null},
				{null, null, null},
				{null, null, null},
				{null, null, null},
				{null, null, null},
				{null, null, null},
			},
			new String[] {
				"Reference", "Function Type", "Function Name && Parameter"
			}
		) {
			Class[] columnTypes = new Class[] {
				String.class, Object.class, Object.class
			};
			public Class getColumnClass(int columnIndex) {
				return columnTypes[columnIndex];
			}
		});
		function_table.getColumnModel().getColumn(0).setPreferredWidth(120);
		function_table.getColumnModel().getColumn(1).setPreferredWidth(150);
		function_table.getColumnModel().getColumn(2).setPreferredWidth(336);
		function_table.setRowHeight(25);
		scrollPane_function.setViewportView(function_table);
		
		TableColumn referenceColumn_function = function_table.getColumn("Reference");
		
		
		
		
		
		
		JButton btnReadFunction = new JButton("Read Function");
		btnReadFunction.setBounds(295, 778, 610, 59);
		btnReadFunction.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
			}
		});
		
		btnReadFunction.setFont(new Font("Arial", Font.PLAIN, 26));
		contentPane.add(btnReadFunction);
		
		JTabbedPane tabbedPane = new JTabbedPane(JTabbedPane.TOP);
		tabbedPane.setBounds(0, 0, 5, 5);
		contentPane.add(tabbedPane);
		
		JPanel panel = new JPanel();
		tabbedPane.addTab("New tab", null, panel, null);
		
		JLabel labelRelation = new JLabel("Class Relationship");
		labelRelation.setFont(new Font("Arial", Font.PLAIN, 35));
		labelRelation.setBounds(1014, 180, 284, 41);
		contentPane.add(labelRelation);
		
		JScrollPane scrollPane_Relationship = new JScrollPane();
		scrollPane_Relationship.setBounds(972, 232, 355, 531);
		contentPane.add(scrollPane_Relationship);
		
		// Relationship_table
		Relationship_table = new JTable();
		Relationship_table.setModel(new DefaultTableModel(
			new Object[][] {
				{null, null},
				{null, null},
				{null, null},
				{null, null},
				{null, null},
			},
			new String[] {
				"Relationship", "Class Name"
			}
		) {
			Class[] columnTypes = new Class[] {
				String.class, String.class
			};
			public Class getColumnClass(int columnIndex) {
				return columnTypes[columnIndex];
			}
		});
		
		TableColumn referenceColumn_relationship = Relationship_table.getColumn("Relationship");
		Relationship_table.setRowHeight(25);
		scrollPane_Relationship.setViewportView(Relationship_table);
		
		JComboBox comboBox_variable = new JComboBox();
		comboBox_variable.addItem("Public");
		comboBox_variable.addItem("Private");
		comboBox_variable.addItem("Protected");
		referenceColumn.setCellEditor(new DefaultCellEditor(comboBox_variable));
		
		JComboBox comboBox_function = new JComboBox();
		comboBox_function.addItem("Public");
		comboBox_function.addItem("Private");
		comboBox_function.addItem("Protected");
		referenceColumn_function.setCellEditor(new DefaultCellEditor(comboBox_function));
	    
		JComboBox comboBox_relationship = new JComboBox();
		comboBox_relationship.addItem("Extends");
		comboBox_relationship.addItem("Implements");
		comboBox_relationship.addItem("Aggregation");
		referenceColumn_relationship.setCellEditor(new DefaultCellEditor(comboBox_relationship));
		
		
	}
	
	public void getTable_SetToMap(JTable temp)
	{
		int row = temp.getModel().getRowCount();
		int column = temp.getModel().getColumnCount();
		Object selected;
		boolean out = false ;
		for (int i=0; i < row; i++)
		{
		  for (int j=0; j < column; j++)
		  {
			selected = temp.getModel().getValueAt(i,j);
		    if ( selected != null)
		    {
			  if ( j == 0 )
				  gp._reference_setter(selected.toString());
			  else if ( j == 1 )
				  gp._variable_type_setter(selected.toString());
			  else gp._variable_name_setter(selected.toString());
//			  System.out.println(selected.toString());
//			  textShowDetail.append(selected.toString());
		    }
		  }
		  
//		  class_Detail gp = new class_Detail(reference, variable_type, variable_name);
		  Variable_list.put(gp._variable_name__getter(), gp);
		}
	}
}
